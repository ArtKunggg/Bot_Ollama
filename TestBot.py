from flask import Flask, request, jsonify
from flask import render_template
import mysql.connector
import ollama

app = Flask(__name__)

# üîß ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• MySQL
db = mysql.connector.connect(
    host="localhost",
    user="root",
    password="",  # ‡πÅ‡∏Å‡πâ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
    database="Bot"
)

# üîÅ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
def get_db():
    global db
    if not db.is_connected():
        db.reconnect()
    return db

# üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
def search_name(keyword):
    conn = get_db()
    cursor = conn.cursor(dictionary=True)
    cursor.execute("SELECT * FROM name WHERE first_name LIKE %s OR last_name LIKE %s", (f"%{keyword}%", f"%{keyword}%"))
    result = cursor.fetchall()
    cursor.close()
    return result

# üß† ‡πÉ‡∏ä‡πâ Ollama ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
def ask_ollama(question, context):
    prompt = f"""‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏°‡∏≤
‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:
{context}

‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°: {question}
‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢:
"""
    response = ollama.chat(
        model="llama3",  # ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏≠‡∏∑‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ
        messages=[{"role": "user", "content": prompt}]
    )
    return response['message']['content']

# üåê ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ñ‡∏≤‡∏°-‡∏ï‡∏≠‡∏ö
@app.route("/ask", methods=["POST"])
def ask():
    data = request.json
    question = data.get("question", "").lower()

    conn = get_db()
    cursor = conn.cursor()

    # üìä ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏ô‡∏ß‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
    if "‡∏°‡∏µ‡∏Å‡∏µ‡πà‡∏Ñ‡∏ô" in question or "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô" in question:
        cursor.execute("SELECT COUNT(*) FROM name")
        count = cursor.fetchone()[0]
        return jsonify({"answer": f"‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {count} ‡∏Ñ‡∏ô‡∏Ñ‡πà‡∏∞"})

    if "‡∏°‡∏µ‡∏Å‡∏µ‡πà‡∏≠‡∏µ‡πÄ‡∏°‡∏•" in question or "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏µ‡πÄ‡∏°‡∏•" in question:
        cursor.execute("SELECT COUNT(DISTINCT email) FROM name")
        count = cursor.fetchone()[0]
        return jsonify({"answer": f"‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {count} ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ñ‡πà‡∏∞"})

    if "‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á‡∏Å‡∏µ‡πà‡∏Ñ‡∏ô" in question:
        cursor.execute("SELECT COUNT(*) FROM name WHERE gender = 'Female'")
        count = cursor.fetchone()[0]
        return jsonify({"answer": f"‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {count} ‡∏Ñ‡∏ô‡∏Ñ‡πà‡∏∞"})

    if "‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏¢‡∏Å‡∏µ‡πà‡∏Ñ‡∏ô" in question:
        cursor.execute("SELECT COUNT(*) FROM name WHERE gender = 'Male'")
        count = cursor.fetchone()[0]
        return jsonify({"answer": f"‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {count} ‡∏Ñ‡∏ô‡∏Ñ‡πà‡∏∞"})

    cursor.close()

    # üîÑ ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠‡πÉ‡∏´‡πâ Ollama ‡∏ï‡∏≠‡∏ö
    keyword = question.split()[0]
    people = search_name(keyword)

    if not people:
        return jsonify({"answer": "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏∞"}), 404

    context = "\n".join([
        f"{p['first_name']} {p['last_name']} - {p['email']} ({p['gender']})"
        for p in people
    ])

    answer = ask_ollama(question, context)
    return jsonify({"answer": answer})

@app.route("/")
def index():
    return render_template("index.html")

# üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏£‡∏±‡∏ô Flask
if __name__ == "__main__":
    app.run(debug=True)
